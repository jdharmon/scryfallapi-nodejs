/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a CardFace.
 */
class CardFace {
  /**
   * Create a CardFace.
   * @member {string} [name]
   * @member {string} [typeLine]
   * @member {string} [oracleText]
   * @member {string} [manaCost]
   * @member {array} [colors]
   * @member {array} [colorIndicator]
   * @member {string} [power]
   * @member {string} [toughness]
   * @member {string} [loyalty]
   * @member {string} [flavorText]
   * @member {uuid} [illustrationId]
   * @member {object} [imageUris]
   * @member {string} [imageUris.small]
   * @member {string} [imageUris.normal]
   * @member {string} [imageUris.large]
   * @member {string} [imageUris.png]
   * @member {string} [imageUris.artCrop]
   * @member {string} [imageUris.borderCrop]
   */
  constructor() {
  }

  /**
   * Defines the metadata of CardFace
   *
   * @returns {object} metadata of CardFace
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'card_face',
      type: {
        name: 'Composite',
        className: 'CardFace',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          typeLine: {
            required: false,
            serializedName: 'type_line',
            type: {
              name: 'String'
            }
          },
          oracleText: {
            required: false,
            serializedName: 'oracle_text',
            type: {
              name: 'String'
            }
          },
          manaCost: {
            required: false,
            serializedName: 'mana_cost',
            type: {
              name: 'String'
            }
          },
          colors: {
            required: false,
            serializedName: 'colors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ColorsElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'W', 'U', 'B', 'R', 'G' ]
                  }
              }
            }
          },
          colorIndicator: {
            required: false,
            serializedName: 'color_indicator',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ColorsElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'W', 'U', 'B', 'R', 'G' ]
                  }
              }
            }
          },
          power: {
            required: false,
            serializedName: 'power',
            type: {
              name: 'String'
            }
          },
          toughness: {
            required: false,
            serializedName: 'toughness',
            type: {
              name: 'String'
            }
          },
          loyalty: {
            required: false,
            serializedName: 'loyalty',
            type: {
              name: 'String'
            }
          },
          flavorText: {
            required: false,
            serializedName: 'flavor_text',
            type: {
              name: 'String'
            }
          },
          illustrationId: {
            required: false,
            serializedName: 'illustration_id',
            type: {
              name: 'String'
            }
          },
          imageUris: {
            required: false,
            serializedName: 'image_uris',
            type: {
              name: 'Composite',
              className: 'ImageUri'
            }
          }
        }
      }
    };
  }
}

module.exports = CardFace;
