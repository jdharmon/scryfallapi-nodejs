/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as moment from "moment";

export interface RelatedCards {
  id?: string;
  name?: string;
  uri?: string;
}

export interface ImageUri {
  small?: string;
  normal?: string;
  large?: string;
  png?: string;
  artCrop?: string;
  borderCrop?: string;
}

export interface CardFace {
  name?: string;
  typeLine?: string;
  oracleText?: string;
  manaCost?: string;
  colors?: string[];
  colorIndicator?: string[];
  power?: string;
  toughness?: string;
  loyalty?: string;
  flavorText?: string;
  illustrationId?: string;
  imageUris?: ImageUri;
}

export interface Legality {
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  standard?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  future?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  frontier?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  modern?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  legacy?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  pauper?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  vintage?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  penny?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  commander?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  onevOne?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  duel?: string;
  /**
   * Possible values include: 'legal', 'not_legal', 'restricted', 'banned'
  */
  brawl?: string;
}

export interface Card {
  id?: string;
  oracleId?: string;
  multiverseIds?: number[];
  mtgoId?: number;
  arenaId?: number;
  mtgoFoilId?: number;
  uri?: string;
  scryfallUri?: string;
  printsSearchUri?: string;
  rulingsUri?: string;
  name?: string;
  /**
   * Possible values include: 'normal', 'split', 'flip', 'transform', 'meld', 'leveler', 'saga',
   * 'planar', 'scheme', 'vanguard', 'token', 'double_faced_token', 'emblem', 'augment', 'host'
  */
  layout?: string;
  cmc?: number;
  typeLine?: string;
  oracleText?: string;
  manaCost?: string;
  power?: string;
  toughness?: string;
  loyalty?: string;
  lifeModifier?: string;
  handModifier?: string;
  colors?: string[];
  colorIndicator?: string[];
  colorIdentity?: string[];
  allParts?: RelatedCards[];
  cardFaces?: CardFace[];
  legalities?: Legality;
  reserved?: boolean;
  edhrecRank?: number;
  set?: string;
  setName?: string;
  collectorNumber?: string;
  setSearchUri?: string;
  scryfallSetUri?: string;
  imageUris?: ImageUri;
  highresImage?: boolean;
  reprint?: boolean;
  digital?: boolean;
  /**
   * Possible values include: 'common', 'uncommon', 'rare', 'mythic'
  */
  rarity?: string;
  flavorText?: string;
  artist?: string;
  illustrationId?: string;
  frame?: string;
  fullArt?: boolean;
  watermark?: string;
  /**
   * Possible values include: 'black', 'borderless', 'gold', 'silver', 'white'
  */
  borderColor?: string;
  storySpotlightNumber?: number;
  storySpotlightUri?: string;
  timeshifted?: boolean;
  colorshifted?: boolean;
  futureshifted?: boolean;
  purchaseUris?: { [propertyName: string]: string };
  relatedUris?: { [propertyName: string]: string };
}

export interface Catalog {
  totalItems?: number;
  data?: string[];
}

export interface Set {
  code?: string;
  mtgoCode?: string;
  name?: string;
  /**
   * Possible values include: 'core', 'expansion', 'masters', 'masterpiece', 'from_the_vault',
   * 'spellbook', 'premium_deck', 'duel_deck', 'commander', 'planechase', 'conspiracy',
   * 'archenemy', 'vanguard', 'funny', 'starter', 'box', 'promo', 'token', 'memorabilia',
   * 'treasure_chest'
  */
  setType?: string;
  releasedAt?: Date;
  blockCode?: string;
  block?: string;
  parentSetCode?: string;
  cardCount?: number;
  digital?: boolean;
  foil?: boolean;
  iconSvgUri?: string;
  searchUri?: string;
}

export interface Ruling {
  source?: string;
  publishedAt?: Date;
  comment?: string;
}

export interface CardSymbol {
  symbol?: string;
  looseVariant?: string;
  english?: string;
  transposable?: boolean;
  representsMana?: boolean;
  cmc?: number;
  appearsInManaCosts?: boolean;
  funny?: boolean;
  /**
   * Possible values include: 'W', 'U', 'B', 'R', 'G'
  */
  colors?: string;
}

export interface ManaCost {
  cost?: string;
  cmc?: number;
  /**
   * Possible values include: 'W', 'U', 'B', 'R', 'G'
  */
  colors?: string;
  colorless?: boolean;
  monocolored?: boolean;
  multicolored?: boolean;
}

export interface CardList {
  totalCards?: number;
  hasMore?: boolean;
  nextPage?: string;
  data?: Card[];
}

export interface SetList {
  data?: Set[];
}

export interface RulingList {
  data?: Ruling[];
}

export interface CardSymbolList {
  data?: CardSymbol[];
}

export interface ErrorModel {
  status?: number;
  code?: string;
  details?: string;
  type?: string;
  warnings?: string[];
}
