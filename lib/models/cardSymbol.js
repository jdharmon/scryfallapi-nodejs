/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a CardSymbol.
 */
class CardSymbol {
  /**
   * Create a CardSymbol.
   * @property {string} [symbol]
   * @property {string} [looseVariant]
   * @property {string} [english]
   * @property {boolean} [transposable]
   * @property {boolean} [representsMana]
   * @property {number} [cmc]
   * @property {boolean} [appearsInManaCosts]
   * @property {boolean} [funny]
   * @property {string} [colors] Possible values include: 'W', 'U', 'B', 'R',
   * 'G'
   */
  constructor() {
  }

  /**
   * Defines the metadata of CardSymbol
   *
   * @returns {object} metadata of CardSymbol
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'card_symbol',
      type: {
        name: 'Composite',
        className: 'CardSymbol',
        modelProperties: {
          symbol: {
            required: false,
            serializedName: 'symbol',
            type: {
              name: 'String'
            }
          },
          looseVariant: {
            required: false,
            serializedName: 'loose_variant',
            type: {
              name: 'String'
            }
          },
          english: {
            required: false,
            serializedName: 'english',
            type: {
              name: 'String'
            }
          },
          transposable: {
            required: false,
            serializedName: 'transposable',
            type: {
              name: 'Boolean'
            }
          },
          representsMana: {
            required: false,
            serializedName: 'represents_mana',
            type: {
              name: 'Boolean'
            }
          },
          cmc: {
            required: false,
            serializedName: 'cmc',
            type: {
              name: 'Number'
            }
          },
          appearsInManaCosts: {
            required: false,
            serializedName: 'appears_in_mana_costs',
            type: {
              name: 'Boolean'
            }
          },
          funny: {
            required: false,
            serializedName: 'funny',
            type: {
              name: 'Boolean'
            }
          },
          colors: {
            required: false,
            serializedName: 'colors',
            type: {
              name: 'Enum',
              allowedValues: [ 'W', 'U', 'B', 'R', 'G' ]
            }
          }
        }
      }
    };
  }
}

module.exports = CardSymbol;
