/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a Card.
 */
class Card {
  /**
   * Create a Card.
   * @member {uuid} [id]
   * @member {uuid} [oracleId]
   * @member {array} [multiverseIds]
   * @member {number} [mtgoId]
   * @member {number} [arenaId]
   * @member {number} [mtgoFoilId]
   * @member {string} [uri]
   * @member {string} [scryfallUri]
   * @member {string} [printsSearchUri]
   * @member {string} [rulingsUri]
   * @member {string} [name]
   * @member {string} [layout] Possible values include: 'normal', 'split',
   * 'flip', 'transform', 'meld', 'leveler', 'saga', 'planar', 'scheme',
   * 'vanguard', 'token', 'double_faced_token', 'emblem', 'augment', 'host'
   * @member {number} [cmc]
   * @member {string} [typeLine]
   * @member {string} [oracleText]
   * @member {string} [manaCost]
   * @member {string} [power]
   * @member {string} [toughness]
   * @member {string} [loyalty]
   * @member {string} [lifeModifier]
   * @member {string} [handModifier]
   * @member {array} [colors]
   * @member {array} [colorIndicator]
   * @member {array} [colorIdentity]
   * @member {array} [allParts]
   * @member {array} [cardFaces]
   * @member {object} [legalities]
   * @member {string} [legalities.standard] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.future] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.frontier] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.modern] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.legacy] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.pauper] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.vintage] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.penny] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.commander] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.onevOne] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.duel] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {string} [legalities.brawl] Possible values include: 'legal',
   * 'not_legal', 'restricted', 'banned'
   * @member {boolean} [reserved]
   * @member {number} [edhrecRank]
   * @member {string} [set]
   * @member {string} [setName]
   * @member {string} [collectorNumber]
   * @member {string} [setSearchUri]
   * @member {string} [scryfallSetUri]
   * @member {object} [imageUris]
   * @member {string} [imageUris.small]
   * @member {string} [imageUris.normal]
   * @member {string} [imageUris.large]
   * @member {string} [imageUris.png]
   * @member {string} [imageUris.artCrop]
   * @member {string} [imageUris.borderCrop]
   * @member {boolean} [highresImage]
   * @member {boolean} [reprint]
   * @member {boolean} [digital]
   * @member {string} [rarity] Possible values include: 'common', 'uncommon',
   * 'rare', 'mythic'
   * @member {string} [flavorText]
   * @member {string} [artist]
   * @member {uuid} [illustrationId]
   * @member {string} [frame]
   * @member {boolean} [fullArt]
   * @member {string} [watermark]
   * @member {string} [borderColor] Possible values include: 'black',
   * 'borderless', 'gold', 'silver', 'white'
   * @member {number} [storySpotlightNumber]
   * @member {string} [storySpotlightUri]
   * @member {boolean} [timeshifted]
   * @member {boolean} [colorshifted]
   * @member {boolean} [futureshifted]
   * @member {object} [purchaseUris]
   * @member {object} [relatedUris]
   */
  constructor() {
  }

  /**
   * Defines the metadata of Card
   *
   * @returns {object} metadata of Card
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'card',
      type: {
        name: 'Composite',
        className: 'Card',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          oracleId: {
            required: false,
            serializedName: 'oracle_id',
            type: {
              name: 'String'
            }
          },
          multiverseIds: {
            required: false,
            serializedName: 'multiverse_ids',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'NumberElementType',
                  type: {
                    name: 'Number'
                  }
              }
            }
          },
          mtgoId: {
            required: false,
            serializedName: 'mtgo_id',
            type: {
              name: 'Number'
            }
          },
          arenaId: {
            required: false,
            serializedName: 'arena_id',
            type: {
              name: 'Number'
            }
          },
          mtgoFoilId: {
            required: false,
            serializedName: 'mtgo_foil_id',
            type: {
              name: 'Number'
            }
          },
          uri: {
            required: false,
            serializedName: 'uri',
            type: {
              name: 'String'
            }
          },
          scryfallUri: {
            required: false,
            serializedName: 'scryfall_uri',
            type: {
              name: 'String'
            }
          },
          printsSearchUri: {
            required: false,
            serializedName: 'prints_search_uri',
            type: {
              name: 'String'
            }
          },
          rulingsUri: {
            required: false,
            serializedName: 'rulings_uri',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          layout: {
            required: false,
            serializedName: 'layout',
            type: {
              name: 'Enum',
              allowedValues: [ 'normal', 'split', 'flip', 'transform', 'meld', 'leveler', 'saga', 'planar', 'scheme', 'vanguard', 'token', 'double_faced_token', 'emblem', 'augment', 'host' ]
            }
          },
          cmc: {
            required: false,
            serializedName: 'cmc',
            type: {
              name: 'Number'
            }
          },
          typeLine: {
            required: false,
            serializedName: 'type_line',
            type: {
              name: 'String'
            }
          },
          oracleText: {
            required: false,
            serializedName: 'oracle_text',
            type: {
              name: 'String'
            }
          },
          manaCost: {
            required: false,
            serializedName: 'mana_cost',
            type: {
              name: 'String'
            }
          },
          power: {
            required: false,
            serializedName: 'power',
            type: {
              name: 'String'
            }
          },
          toughness: {
            required: false,
            serializedName: 'toughness',
            type: {
              name: 'String'
            }
          },
          loyalty: {
            required: false,
            serializedName: 'loyalty',
            type: {
              name: 'String'
            }
          },
          lifeModifier: {
            required: false,
            serializedName: 'life_modifier',
            type: {
              name: 'String'
            }
          },
          handModifier: {
            required: false,
            serializedName: 'hand_modifier',
            type: {
              name: 'String'
            }
          },
          colors: {
            required: false,
            serializedName: 'colors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ColorsElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'W', 'U', 'B', 'R', 'G' ]
                  }
              }
            }
          },
          colorIndicator: {
            required: false,
            serializedName: 'color_indicator',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ColorsElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'W', 'U', 'B', 'R', 'G' ]
                  }
              }
            }
          },
          colorIdentity: {
            required: false,
            serializedName: 'color_identity',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ColorsElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'W', 'U', 'B', 'R', 'G' ]
                  }
              }
            }
          },
          allParts: {
            required: false,
            serializedName: 'all_parts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RelatedCardsElementType',
                  type: {
                    name: 'Composite',
                    className: 'RelatedCards'
                  }
              }
            }
          },
          cardFaces: {
            required: false,
            serializedName: 'card_faces',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CardFaceElementType',
                  type: {
                    name: 'Composite',
                    className: 'CardFace'
                  }
              }
            }
          },
          legalities: {
            required: false,
            serializedName: 'legalities',
            type: {
              name: 'Composite',
              className: 'Legality'
            }
          },
          reserved: {
            required: false,
            serializedName: 'reserved',
            type: {
              name: 'Boolean'
            }
          },
          edhrecRank: {
            required: false,
            serializedName: 'edhrec_rank',
            type: {
              name: 'Number'
            }
          },
          set: {
            required: false,
            serializedName: 'set',
            type: {
              name: 'String'
            }
          },
          setName: {
            required: false,
            serializedName: 'set_name',
            type: {
              name: 'String'
            }
          },
          collectorNumber: {
            required: false,
            serializedName: 'collector_number',
            type: {
              name: 'String'
            }
          },
          setSearchUri: {
            required: false,
            serializedName: 'set_search_uri',
            type: {
              name: 'String'
            }
          },
          scryfallSetUri: {
            required: false,
            serializedName: 'scryfall_set_uri',
            type: {
              name: 'String'
            }
          },
          imageUris: {
            required: false,
            serializedName: 'image_uris',
            type: {
              name: 'Composite',
              className: 'ImageUri'
            }
          },
          highresImage: {
            required: false,
            serializedName: 'highres_image',
            type: {
              name: 'Boolean'
            }
          },
          reprint: {
            required: false,
            serializedName: 'reprint',
            type: {
              name: 'Boolean'
            }
          },
          digital: {
            required: false,
            serializedName: 'digital',
            type: {
              name: 'Boolean'
            }
          },
          rarity: {
            required: false,
            serializedName: 'rarity',
            type: {
              name: 'Enum',
              allowedValues: [ 'common', 'uncommon', 'rare', 'mythic' ]
            }
          },
          flavorText: {
            required: false,
            serializedName: 'flavor_text',
            type: {
              name: 'String'
            }
          },
          artist: {
            required: false,
            serializedName: 'artist',
            type: {
              name: 'String'
            }
          },
          illustrationId: {
            required: false,
            serializedName: 'illustration_id',
            type: {
              name: 'String'
            }
          },
          frame: {
            required: false,
            serializedName: 'frame',
            type: {
              name: 'String'
            }
          },
          fullArt: {
            required: false,
            serializedName: 'full_art',
            type: {
              name: 'Boolean'
            }
          },
          watermark: {
            required: false,
            serializedName: 'watermark',
            type: {
              name: 'String'
            }
          },
          borderColor: {
            required: false,
            serializedName: 'border_color',
            type: {
              name: 'Enum',
              allowedValues: [ 'black', 'borderless', 'gold', 'silver', 'white' ]
            }
          },
          storySpotlightNumber: {
            required: false,
            serializedName: 'story_spotlight_number',
            type: {
              name: 'Number'
            }
          },
          storySpotlightUri: {
            required: false,
            serializedName: 'story_spotlight_uri',
            type: {
              name: 'String'
            }
          },
          timeshifted: {
            required: false,
            serializedName: 'timeshifted',
            type: {
              name: 'Boolean'
            }
          },
          colorshifted: {
            required: false,
            serializedName: 'colorshifted',
            type: {
              name: 'Boolean'
            }
          },
          futureshifted: {
            required: false,
            serializedName: 'futureshifted',
            type: {
              name: 'Boolean'
            }
          },
          purchaseUris: {
            required: false,
            serializedName: 'purchase_uris',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          relatedUris: {
            required: false,
            serializedName: 'related_uris',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Card;
